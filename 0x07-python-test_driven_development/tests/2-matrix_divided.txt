* matrix divided test file *
____________________________

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2],[1, 2]]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0], [1.0, 2.0]]


>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = 9
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [9, 0]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[], []]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[], [1,2]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [["c", 1],[1, 2]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[[1, 2], [1, 2]],[1, 2]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[2, 1], 9, [2, 1]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [[1, 2],[1, 2, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size


>>> matrix = [[1, 2, 3], [1, 2, 3], [1, 2]]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size


>>> matrix = [[1, 2, 3], [1, 2, 3]]


>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero


>>> matrix_divided(matrix, "p")
Traceback (most recent call last):
    ...
TypeError: div must be a number


>>> matrix_divided(matrix, matrix)
Traceback (most recent call last):
    ...
TypeError: div must be a number


